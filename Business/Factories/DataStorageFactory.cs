using Business.Interfaces;
using Business.Data;

namespace Business.Factories
{
    public class DataStorageFactory : IDataStorageFactory
    {
        private readonly string _storageType;

        public DataStorageFactory(string storageType)
        {
            _storageType = storageType;
        }
        // Generated by chatgpt

        // Create a new instance of the data storage based on the storage type
        public IDataStorage CreateDataStorage()
        {
            return _storageType switch
            {
                "Json" => new JsonStorage(), // Return a new instance of the JsonStorage class
                "Mock" => new MockDataStorage(), // Return a new instance of the MockDataStorage class
                _ => throw new InvalidOperationException("Invalid storage type specified") // Throw an exception if the storage type is invalid
            };
        }
    }
}
